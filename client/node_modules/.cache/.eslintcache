[{"/home/mnz/Desktop/Work/js/playlist/client/src/index.js":"1","/home/mnz/Desktop/Work/js/playlist/client/src/App.js":"2","/home/mnz/Desktop/Work/js/playlist/client/src/reportWebVitals.js":"3","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Homepage.jsx":"4","/home/mnz/Desktop/Work/js/playlist/client/src/Views/SearchPage.jsx":"5","/home/mnz/Desktop/Work/js/playlist/client/src/Views/UpcomingGamesPage.jsx":"6","/home/mnz/Desktop/Work/js/playlist/client/src/Views/GamePage.jsx":"7","/home/mnz/Desktop/Work/js/playlist/client/src/Views/TopGamesPage.jsx":"8","/home/mnz/Desktop/Work/js/playlist/client/src/Controllers/igdb.js":"9","/home/mnz/Desktop/Work/js/playlist/client/src/Helpers/enumerators.js":"10","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/Footer.jsx":"11","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/CardBox.jsx":"12","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/Header.jsx":"13","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/GameCard.jsx":"14"},{"size":489,"mtime":1656355525023,"results":"15","hashOfConfig":"16"},{"size":833,"mtime":1656690284956,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1656273963933,"results":"18","hashOfConfig":"16"},{"size":4527,"mtime":1656704045373,"results":"19","hashOfConfig":"16"},{"size":3519,"mtime":1656624331572,"results":"20","hashOfConfig":"16"},{"size":2129,"mtime":1656615799032,"results":"21","hashOfConfig":"16"},{"size":6786,"mtime":1656702229596,"results":"22","hashOfConfig":"16"},{"size":2079,"mtime":1656615751592,"results":"23","hashOfConfig":"16"},{"size":3940,"mtime":1656707147856,"results":"24","hashOfConfig":"16"},{"size":1737,"mtime":1656636448319,"results":"25","hashOfConfig":"16"},{"size":577,"mtime":1656624831066,"results":"26","hashOfConfig":"16"},{"size":711,"mtime":1656701494576,"results":"27","hashOfConfig":"16"},{"size":1330,"mtime":1656641462165,"results":"28","hashOfConfig":"16"},{"size":1182,"mtime":1656701963123,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"1c0xeqm",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"/home/mnz/Desktop/Work/js/playlist/client/src/index.js",["79"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/home/mnz/Desktop/Work/js/playlist/client/src/App.js",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/reportWebVitals.js",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Views/Homepage.jsx",["80","81","82"],[],"import { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Alert,\n  Row,\n  Container,\n  Col,\n  Carousel,\n  CarouselItem,\n  Image,\n} from \"react-bootstrap\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { gameDetails, popularGames } from \"../Controllers/igdb\";\nimport { Footer } from \"./Components/Footer\";\nimport { Header } from \"./Components/Header\";\n\nconst monthlySetup = {\n  id: 7360,\n  artIndex: 8,\n};\n\nexport const Homepage = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [popular, setPopular] = useState([]);\n  const [monthly, setMonthly] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      const monthlyDetails = await gameDetails(monthlySetup.id);\n      setMonthly(monthlyDetails);\n      const response = await popularGames();\n      setPopular(response);\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100 w-100\">\n      <Header />\n      {/* <Container style={{ marginTop: -16 }}>\n        <Row className=\"align-items-center d-flex\">\n          <h6>Find your all favorite games in one place!</h6>\n        </Row>\n      </Container> */}\n      {monthly?.artworks && (\n        <div\n          onClick={() => navigate(`/game?id=${monthly.id}`)}\n          style={{\n            height: \"20em\",\n            width: \"100%\",\n            marginTop: -16,\n            paddingTop: \"1%\",\n            paddingLeft: \"1%\",\n            // overflow: \"hidden\",\n            backgroundImage: `url(\"https://images.igdb.com/igdb/image/upload/t_1080p/${monthly.artworks.at(\n              // Math.floor(Math.random() * monthly.artworks.length)\n              monthlySetup.artIndex\n            )}\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        >\n          <h3 style={{ textShadow: \"1px 1px #000\" }}>\n            Monthly Recommendation:\n          </h3>\n          <h2 style={{ textShadow: \"1px 1px #000\" }}>{monthly.name}</h2>\n        </div>\n      )}\n      <Container className=\"h-75 d-flex align-items-center justify-content-center flex-column\">\n        <Row className=\"w-100 py-5 mt-5\">\n          <Col className=\"col-10\">\n            <div className=\"active-cyan-4 mb-4\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Search for a game...\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                value={searchInput}\n                onKeyUp={(e) => {\n                  if (e.key === \"Enter\") {\n                    if (searchInput.length)\n                      navigate(`/search?q=${searchInput}`);\n                  }\n                }}\n              />\n            </div>\n          </Col>\n          <Col>\n            <Button\n              onClick={() => {\n                if (searchInput.length) navigate(`/search?q=${searchInput}`);\n              }}\n            >\n              Search\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"w-100 my-5\">\n          <h4>New popular releases:</h4>\n        </Row>\n        {popular && (\n          <Row className=\"w-100 mb-5\">\n            <Carousel>\n              {popular.map((game) => (\n                <Carousel.Item\n                  key={game.id}\n                  style={{\n                    height: \"20em\",\n                    paddingInline: \"10%\",\n                    background:\n                      \"linear-gradient(90deg, rgba(40,44,52,1) 0%, rgba(40,44,52,1) 20%, rgba(57,63,75,1) 66%, rgba(40,44,52,1) 100%)\",\n                  }}\n                  onClick={() => navigate(`/game?id=${game.id}`)}\n                >\n                  <div className=\"d-flex justify-content-between\">\n                    <div className=\"my-5 pb-5 d-flex flex-column justify-content-between\">\n                      <h2>{game.name}</h2>\n                      <h5>\n                        {game.summary.length > 500\n                          ? `${game.summary.slice(0, 500)}...`\n                          : game.summary}\n                      </h5>\n                    </div>\n                    <Image\n                      style={{ maxWidth: \"30%\" }}\n                      fluid={true}\n                      src={game.cover}\n                    ></Image>\n                  </div>\n                </Carousel.Item>\n              ))}\n            </Carousel>\n          </Row>\n        )}\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n","/home/mnz/Desktop/Work/js/playlist/client/src/Views/SearchPage.jsx",["83","84","85"],[],"import { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { getCover, searchGames } from \"../Controllers/igdb\";\nimport { CardBox } from \"./Components/CardBox\";\nimport { Footer } from \"./Components/Footer\";\nimport { GameCard } from \"./Components/GameCard\";\nimport { Header } from \"./Components/Header\";\nimport { genres } from \"../Helpers/enumerators\";\n\nexport const SearchPage = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const searchName = searchParams.get(\"q\");\n  const genre = searchParams.get(\"genre\");\n  const [searchQuery, setSearchQuery] = useState();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [gameList, setGameList] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      if (!searchQuery) return;\n      setGameList([]);\n      const response = await searchGames(searchQuery);\n      console.log(response);\n      setGameList(response);\n      // response.forEach((item) => {\n      //   getCover(item.id).then((data) => {\n      //     setGameList((old) => [\n      //       ...old,\n      //       {\n      //         id: item.id,\n      //         name: item.name,\n      //         summary: item.summary,\n      //         cover: `${coverUrl}${data}`,\n      //       },\n      //     ]);\n      //   });\n      // });\n    })();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    setGameList([]);\n    setSearchInput(`${searchName ? searchName : \"\"}`);\n    setSearchQuery({\n      searchName,\n      genre,\n    });\n  }, [genre, searchName]);\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100 w-100\">\n      <Header />\n      <Container className=\"mb-5\">\n        <Row className=\"w-100\">\n          <Col className=\"col-10\">\n            <div className=\"active-cyan-4 mb-4\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Search for a game...\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                value={searchInput}\n                onKeyUp={(e) => {\n                  if (e.key === \"Enter\") {\n                    if (searchInput === searchQuery.searchName) return;\n                    if (searchInput.length === 0) return;\n                    navigate(\n                      `/search?q=${searchInput}&${\n                        searchQuery.genre && `genre=${searchQuery.genre}`\n                      }`\n                    );\n                  }\n                }}\n              />\n            </div>\n          </Col>\n          <Col>\n            <Button\n              onClick={() => {\n                if (searchInput === searchQuery.searchName) return;\n                if (searchInput.length === 0) return;\n                navigate(\n                  `/search?q=${searchInput}&${\n                    searchQuery.genre && `genre=${searchQuery.genre}`\n                  }`\n                );\n              }}\n            >\n              Search\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          {searchQuery?.genre && (\n            <h3>{`${\n              genres.find((item) => item.id == searchQuery.genre).name\n            } games:`}</h3>\n          )}\n        </Row>\n        <Row className=\"align-items-center d-flex\">\n          <CardBox gameList={gameList} />\n        </Row>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n","/home/mnz/Desktop/Work/js/playlist/client/src/Views/UpcomingGamesPage.jsx",["86","87","88","89","90"],[],"import { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  getCover,\n  getTop,\n  getUpcoming,\n  searchGames,\n} from \"../Controllers/igdb\";\nimport { CardBox } from \"./Components/CardBox\";\nimport { Footer } from \"./Components/Footer\";\nimport { GameCard } from \"./Components/GameCard\";\nimport { Header } from \"./Components/Header\";\n\nexport const UpcomingGamesPage = () => {\n  const navigate = useNavigate();\n  const [searchInput, setSearchInput] = useState();\n  const [gameList, setGameList] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const response = await getUpcoming();\n      setGameList(response);\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100 w-100\">\n      <Header />\n      <Container className=\"mb-5\">\n        <Row className=\"w-100\">\n          <Col className=\"col-10\">\n            <div className=\"active-cyan-4 mb-4\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Search for a game...\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                value={searchInput}\n                onKeyUp={(e) => {\n                  if (e.key === \"Enter\") {\n                    if (searchInput.length === 0) return;\n                    navigate(`/search?q=${searchInput}`);\n                  }\n                }}\n              />\n            </div>\n          </Col>\n          <Col>\n            <Button\n              onClick={() => {\n                if (searchInput.length === 0) return;\n                navigate(`/search?q=${searchInput}`);\n              }}\n            >\n              Search\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <h3>Most anticipated upcoming games:</h3>\n        </Row>\n        <Row className=\"align-items-center d-flex\">\n          <CardBox gameList={gameList} />\n        </Row>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n","/home/mnz/Desktop/Work/js/playlist/client/src/Views/GamePage.jsx",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Views/TopGamesPage.jsx",["91","92","93","94"],[],"import { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { getCover, getTop, searchGames } from \"../Controllers/igdb\";\nimport { CardBox } from \"./Components/CardBox\";\nimport { Footer } from \"./Components/Footer\";\nimport { GameCard } from \"./Components/GameCard\";\nimport { Header } from \"./Components/Header\";\n\nexport const TopGamesPage = () => {\n  const navigate = useNavigate();\n  const [searchInput, setSearchInput] = useState();\n  const [gameList, setGameList] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const response = await getTop();\n      setGameList(response);\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100 w-100\">\n      <Header />\n      <Container className=\"mb-5\">\n        <Row className=\"w-100\">\n          <Col className=\"col-10\">\n            <div className=\"active-cyan-4 mb-4\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Search for a game...\"\n                aria-label=\"Search\"\n                onChange={(e) => {\n                  setSearchInput(e.target.value);\n                }}\n                value={searchInput}\n                onKeyUp={(e) => {\n                  if (e.key === \"Enter\") {\n                    if (searchInput.length === 0) return;\n                    navigate(`/search?q=${searchInput}`);\n                  }\n                }}\n              />\n            </div>\n          </Col>\n          <Col>\n            <Button\n              onClick={() => {\n                if (searchInput.length === 0) return;\n                navigate(`/search?q=${searchInput}`);\n              }}\n            >\n              Search\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <h3>Top 100 Games:</h3>\n        </Row>\n        <Row className=\"align-items-center d-flex\">\n          <CardBox gameList={gameList} />\n        </Row>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n","/home/mnz/Desktop/Work/js/playlist/client/src/Controllers/igdb.js",["95","96"],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Helpers/enumerators.js",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/Footer.jsx",["97","98","99"],[],"import { Container, Nav, Navbar, NavDropdown, Row } from \"react-bootstrap\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"mt-auto bg-dark\">\n      <Container\n        className=\"d-flex justify-content-between align-items-end\"\n        style={{ height: \"5em\" }}\n      >\n        <Row>\n          <p style={{ fontSize: \"10px\" }}>\n            <b>Disclaimer: </b>All games, artworks, and covers belong to their\n            respective owners\n          </p>\n        </Row>\n        <Row>\n          <h6>©2022</h6>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n","/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/CardBox.jsx",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/Header.jsx",[],[],"/home/mnz/Desktop/Work/js/playlist/client/src/Views/Components/GameCard.jsx",["100","101"],[],"import { Button, Card, Container, Row } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./card.css\";\n\nexport const GameCard = ({ id, cover, name, summary }) => {\n  const navigate = useNavigate();\n  return (\n    <Card\n      className=\"hover-shadow\"\n      style={{\n        width: \"18rem\",\n        height: \"29rem\",\n        backgroundColor: \"#00121a\",\n        margin: \"1rem\",\n        borderRadius: 10,\n        boxShadow: \"0 4px 6px 0 rgba(22, 22, 26, 0.38)\",\n      }}\n    >\n      {cover && (\n        <Card.Img variant=\"top\" src={cover} style={{ height: \"21rem\" }} />\n      )}\n      <Card.Body className=\"d-flex align-items-start flex-row justify-content-between\">\n        <Card.Title>\n          {name.length > 40 ? `${name.slice(0, 40)}...` : name}\n        </Card.Title>\n        <Button\n          variant=\"primary\"\n          className=\"align-self-end\"\n          onClick={() => navigate(`/game?id=${id}`)}\n        >\n          Details\n        </Button>\n        {/* <Card.Text>{summary?.slice(0, 100)}</Card.Text>\n        <div className=\"d-flex h-100 justify-content-end align-items-end bg-danger\">\n        </div> */}\n      </Card.Body>\n    </Card>\n  );\n};\n",{"ruleId":"102","severity":1,"message":"103","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":4,"column":3,"nodeType":"104","messageId":"105","endLine":4,"endColumn":8},{"ruleId":"102","severity":1,"message":"107","line":9,"column":3,"nodeType":"104","messageId":"105","endLine":9,"endColumn":15},{"ruleId":"102","severity":1,"message":"108","line":12,"column":10,"nodeType":"104","messageId":"105","endLine":12,"endColumn":18},{"ruleId":"102","severity":1,"message":"109","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":18},{"ruleId":"102","severity":1,"message":"110","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":101,"column":45,"nodeType":"113","messageId":"114","endLine":101,"endColumn":47},{"ruleId":"102","severity":1,"message":"115","line":3,"column":23,"nodeType":"104","messageId":"105","endLine":3,"endColumn":38},{"ruleId":"102","severity":1,"message":"109","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":5,"endColumn":11},{"ruleId":"102","severity":1,"message":"116","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":6,"endColumn":9},{"ruleId":"102","severity":1,"message":"117","line":8,"column":3,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":12,"column":10,"nodeType":"104","messageId":"105","endLine":12,"endColumn":18},{"ruleId":"102","severity":1,"message":"115","line":3,"column":23,"nodeType":"104","messageId":"105","endLine":3,"endColumn":38},{"ruleId":"102","severity":1,"message":"109","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":18},{"ruleId":"102","severity":1,"message":"117","line":4,"column":28,"nodeType":"104","messageId":"105","endLine":4,"endColumn":39},{"ruleId":"102","severity":1,"message":"110","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":110,"column":37,"nodeType":"104","messageId":"120","endLine":110,"endColumn":40},{"ruleId":"118","severity":1,"message":"119","line":137,"column":37,"nodeType":"104","messageId":"120","endLine":137,"endColumn":40},{"ruleId":"102","severity":1,"message":"121","line":1,"column":21,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"122","line":1,"column":26,"nodeType":"104","messageId":"105","endLine":1,"endColumn":32},{"ruleId":"102","severity":1,"message":"123","line":1,"column":34,"nodeType":"104","messageId":"105","endLine":1,"endColumn":45},{"ruleId":"102","severity":1,"message":"124","line":1,"column":24,"nodeType":"104","messageId":"105","endLine":1,"endColumn":33},{"ruleId":"102","severity":1,"message":"125","line":1,"column":35,"nodeType":"104","messageId":"105","endLine":1,"endColumn":38},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'CarouselItem' is defined but never used.","'Navigate' is defined but never used.","'getCover' is defined but never used.","'GameCard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSearchParams' is defined but never used.","'getTop' is defined but never used.","'searchGames' is defined but never used.","no-use-before-define","'url' was used before it was defined.","usedBeforeDefined","'Nav' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used."]