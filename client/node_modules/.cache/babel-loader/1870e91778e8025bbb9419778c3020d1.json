{"ast":null,"code":"const clientID = \"***REMOVED***\";\nconst accessToken = \"***REMOVED***\";\nexport async function popularGames() {\n  try {\n    const response = await fetch(\"http://localhost:3000/popularGames\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function searchGames(query) {\n  try {\n    console.log(query);\n    const response = await fetch(\"http://localhost:3000/findGames\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }),\n      body: JSON.stringify({\n        query\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function getTop() {\n  try {\n    const response = await fetch(\"http://localhost:3000/getTop\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function getUpcoming() {\n  try {\n    const response = await fetch(\"http://localhost:3000/getUpcoming\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function gameDetails(id) {\n  try {\n    const response = await fetch(\"http://localhost:3000/gameDetails\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }),\n      body: JSON.stringify({\n        id\n      })\n    });\n    const result = await response.json(); // result.cover = await getCover(result.id);\n    // let promises = result.artworks.map(async (id) => await getArtwork(id));\n    // result.artworks = await Promise.all(promises);\n\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function getCover(id) {\n  try {\n    // console.log(id);\n    const response = await fetch(\"http://localhost:3000/getCover\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }),\n      body: JSON.stringify({\n        id\n      })\n    });\n    const result = await response.json(); // console.log(id, result);\n\n    if (!result || !result.length) return \"nocover.png\";\n    const url = result.at(0).url;\n    const hash = url.split(\"/\").pop(); // console.log(hash);\n\n    return hash;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\nexport async function getArtwork(id) {\n  try {\n    // console.log(id);\n    const response = await fetch(\"http://localhost:3000/getArtwork\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }),\n      body: JSON.stringify({\n        id\n      })\n    });\n    const result = await response.json(); // console.log(id, result);\n\n    if (!result || !result.length) return \"nocover.png\";\n    const url = result.at(0).url;\n    const hash = url.split(\"/\").pop(); // console.log(hash);\n\n    return hash;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}","map":{"version":3,"names":["clientID","accessToken","popularGames","response","fetch","method","headers","Headers","Accept","Authorization","result","json","console","log","e","searchGames","query","body","JSON","stringify","getTop","getUpcoming","gameDetails","id","getCover","length","url","at","hash","split","pop","getArtwork"],"sources":["/home/mnz/Desktop/Work/js/playlist/src/Controllers/igdb.js"],"sourcesContent":["const clientID = \"***REMOVED***\";\nconst accessToken = \"***REMOVED***\";\n\nexport async function popularGames() {\n  try {\n    const response = await fetch(\"http://localhost:3000/popularGames\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function searchGames(query) {\n  try {\n    console.log(query);\n    const response = await fetch(\"http://localhost:3000/findGames\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n      body: JSON.stringify({\n        query,\n      }),\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function getTop() {\n  try {\n    const response = await fetch(\"http://localhost:3000/getTop\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function getUpcoming() {\n  try {\n    const response = await fetch(\"http://localhost:3000/getUpcoming\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function gameDetails(id) {\n  try {\n    const response = await fetch(\"http://localhost:3000/gameDetails\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n      body: JSON.stringify({\n        id,\n      }),\n    });\n    const result = await response.json();\n    // result.cover = await getCover(result.id);\n    // let promises = result.artworks.map(async (id) => await getArtwork(id));\n    // result.artworks = await Promise.all(promises);\n    console.log(result);\n    return result;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function getCover(id) {\n  try {\n    // console.log(id);\n    const response = await fetch(\"http://localhost:3000/getCover\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n      body: JSON.stringify({\n        id,\n      }),\n    });\n    const result = await response.json();\n    // console.log(id, result);\n    if (!result || !result.length) return \"nocover.png\";\n    const url = result.at(0).url;\n    const hash = url.split(\"/\").pop();\n    // console.log(hash);\n    return hash;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n\nexport async function getArtwork(id) {\n  try {\n    // console.log(id);\n    const response = await fetch(\"http://localhost:3000/getArtwork\", {\n      method: \"POST\",\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n        \"Client-ID\": clientID,\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n      body: JSON.stringify({\n        id,\n      }),\n    });\n    const result = await response.json();\n    // console.log(id, result);\n    if (!result || !result.length) return \"nocover.png\";\n    const url = result.at(0).url;\n    const hash = url.split(\"/\").pop();\n    // console.log(hash);\n    return hash;\n  } catch (e) {\n    console.log(e);\n    return \"error\";\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}